--[=====[
worldspace/tilemap transitions/loadings separate from loader.
loading screens in scene manager where needed.
add load screen when switching maps in scene.

need to add game ui events > layer events -> perhaps a dispatcher for ui and a dispatcher for game?
rewrite rml integration to support this.

add onload and on unload scene support and add to scripting

add game stuff like ui and tilemap to lua.

add entity heirachy. i.e. u can attach entities to each other. This can then be saved as a prefab
	- scene heirarchy / scene tree thingy?
editor camera
better editor play mode
more flexible renderer -> able to render arbitrary stuff by having some prebaked quads and stuff.

lua script reloading
rml file reloading

more drag/drop support for tree view, body, etc

add fastnoise2 to lua
update imnodes and add zooming to fastnoise graph

implement b2_debugdraw?

make sure all operator= are being called correctly when virtual

load in parallell

normal mapping support for tilemap.cpp

https://github.com/DomRe/3DRenderer/blob/master/graphics/GeomBuffer.hpp
https://github.com/DomRe/3DRenderer/blob/master/graphics/GeomBuffer.cpp

https://github.com/DomRe/3DRenderer/blob/master/graphics/Renderer3D.hpp
https://github.com/DomRe/3DRenderer/blob/master/graphics/Renderer3D.cpp

https://github.com/DomRe/3DRenderer/blob/master/systems/RenderSystem3D.cpp

window size independant renderer.
sort out threading

fix play/pause shenanigans
fix no ambient light when no lights in scene

to use:
https://github.com/aiekick/ImCoolBar
https://github.com/fallahn/tmxlite


loading a map should generate prefabs and store them.
we can then on the fly create new entities from these prefabs.
perhaps prefabs should be components without entities, rather than json objects
I.e. load all data beforehand and just assign/copy into a component.

https://stackoverflow.com/questions/892811/drawing-isometric-game-worlds
https://github.com/fallahn/tmxlite/issues/131
--]=====]